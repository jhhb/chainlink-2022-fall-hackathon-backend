/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { VRFD20, VRFD20Interface } from "../../contracts/VRFD20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    name: "DiceLanded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "roller",
        type: "address",
      },
    ],
    name: "DiceRolled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getUserStatus",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "house",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollDice",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526001600060146101000a81548160ff021916908360ff1602179055506002600060156101000a81548160ff021916908360ff160217905550619c40600260006101000a81548163ffffffff021916908363ffffffff1602179055506003600260046101000a81548161ffff021916908361ffff1602179055506001600260066101000a81548163ffffffff021916908363ffffffff160217905550348015620000ac57600080fd5b5060405162001845380380620018458339818101604052810190620000d291906200020a565b818073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336002600a6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600060166101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550806001819055505050506200030b565b600081519050620001d681620002bd565b92915050565b600081519050620001ed81620002d7565b92915050565b6000815190506200020481620002f1565b92915050565b600080600060608486031215620002265762000225620002b8565b5b60006200023686828701620001f3565b93505060206200024986828701620001c5565b92505060406200025c86828701620001dc565b9150509250925092565b6000620002738262000284565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600080fd5b620002c88162000266565b8114620002d457600080fd5b50565b620002e2816200027a565b8114620002ee57600080fd5b50565b620002fc81620002a4565b81146200030857600080fd5b50565b60805160601c611515620003306000396000818160ed015261014101526115156000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631fe543e314610051578063837e7cc61461006d578063b1cad5e31461008b578063ea0d5dcd146100bb575b600080fd5b61006b60048036038101906100669190610e22565b6100eb565b005b6100756101ab565b6040516100829190611078565b60405180910390f35b6100a560048036038101906100a09190610dc8565b610436565b6040516100b29190610ff6565b60405180910390f35b6100d560048036038101906100d09190610dc8565b61059e565b6040516100e29190610ff6565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019d57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610194929190610f7a565b60405180910390fd5b6101a782826105f5565b5050565b600080339050600060149054906101000a900460ff1660ff16600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023c90611058565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600154600060169054906101000a900467ffffffffffffffff16600260049054906101000a900461ffff16600260009054906101000a900463ffffffff16600260069054906101000a900463ffffffff166040518663ffffffff1660e01b81526004016102f2959493929190610fa3565b602060405180830381600087803b15801561030c57600080fd5b505af1158015610320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103449190610df5565b9150806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060149054906101000a900460ff1660ff16600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff16827f3e7fdeab84c01ce5308321caa0b460e1c4ec3c7099223d79634d9a71d99932e360405160405180910390a35090565b6060600060149054906101000a900460ff1660ff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c390611018565b60405180910390fd5b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561054f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054690611038565b60405180910390fd5b610597600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610733565b9050919050565b60606000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506105ed81610c0b565b915050919050565b60006003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006001601484600081518110610647576106466112f5565b5b60200260200101516106599190611266565b6106639190611100565b905080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060159054906101000a900460ff1660ff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080847f54d97c1f7e5abad75bd421455cd4dd296852a52e1ea721f2cdb66d06fa2082a960405160405180910390a350505050565b606060006040518061028001604052806040518060400160405280600981526020017f54617267617279656e000000000000000000000000000000000000000000000081525081526020016040518060400160405280600981526020017f4c616e6e6973746572000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f537461726b00000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600681526020017f547972656c6c000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600981526020017f426172617468656f6e000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f4d617274656c6c0000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f54756c6c7900000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600681526020017f426f6c746f6e000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f477265796a6f790000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f417272796e00000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600481526020017f467265790000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f4d6f726d6f6e740000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600681526020017f5461726c6579000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f4461796e6500000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f556d62657200000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f56616c6572796f6e00000000000000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f4d616e6465726c7900000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f436c6567616e650000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600681526020017f476c6f766572000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f4b6172737461726b000000000000000000000000000000000000000000000000815250815250905080600184610bed9190611156565b60148110610bfe57610bfd6112f5565b5b6020020151915050919050565b6060600060405180606001604052806040518060400160405280600481526020017f4e4f4e450000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f52554e4e494e470000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f52414e00000000000000000000000000000000000000000000000000000000008152508152509050808360038110610cde57610cdd6112f5565b5b6020020151915050919050565b6000610cfe610cf9846110b8565b611093565b90508083825260208201905082856020860282011115610d2157610d20611358565b5b60005b85811015610d515781610d378882610d9e565b845260208401935060208301925050600181019050610d24565b5050509392505050565b600081359050610d6a816114b1565b92915050565b600082601f830112610d8557610d84611353565b5b8135610d95848260208601610ceb565b91505092915050565b600081359050610dad816114c8565b92915050565b600081519050610dc2816114c8565b92915050565b600060208284031215610dde57610ddd611362565b5b6000610dec84828501610d5b565b91505092915050565b600060208284031215610e0b57610e0a611362565b5b6000610e1984828501610db3565b91505092915050565b60008060408385031215610e3957610e38611362565b5b6000610e4785828601610d9e565b925050602083013567ffffffffffffffff811115610e6857610e6761135d565b5b610e7485828601610d70565b9150509250929050565b610e878161118a565b82525050565b610e968161119c565b82525050565b6000610ea7826110e4565b610eb181856110ef565b9350610ec1818560208601611202565b610eca81611367565b840191505092915050565b6000610ee26038836110ef565b9150610eed82611378565b604082019050919050565b6000610f056051836110ef565b9150610f10826113c7565b606082019050919050565b6000610f286044836110ef565b9150610f338261143c565b606082019050919050565b610f47816111a6565b82525050565b610f56816111d4565b82525050565b610f65816111de565b82525050565b610f74816111ee565b82525050565b6000604082019050610f8f6000830185610e7e565b610f9c6020830184610e7e565b9392505050565b600060a082019050610fb86000830188610e8d565b610fc56020830187610f6b565b610fd26040830186610f3e565b610fdf6060830185610f5c565b610fec6080830184610f5c565b9695505050505050565b600060208201905081810360008301526110108184610e9c565b905092915050565b6000602082019050818103600083015261103181610ed5565b9050919050565b6000602082019050818103600083015261105181610ef8565b9050919050565b6000602082019050818103600083015261107181610f1b565b9050919050565b600060208201905061108d6000830184610f4d565b92915050565b600061109d6110ae565b90506110a98282611235565b919050565b6000604051905090565b600067ffffffffffffffff8211156110d3576110d2611324565b5b602082029050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061110b826111d4565b9150611116836111d4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561114b5761114a611297565b5b828201905092915050565b6000611161826111d4565b915061116c836111d4565b92508282101561117f5761117e611297565b5b828203905092915050565b6000611195826111b4565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60005b83811015611220578082015181840152602081019050611205565b8381111561122f576000848401525b50505050565b61123e82611367565b810181811067ffffffffffffffff8211171561125d5761125c611324565b5b80604052505050565b6000611271826111d4565b915061127c836111d4565b92508261128c5761128b6112c6565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f5468652072657175657374656420616464726573732069732063757272656e7460008201527f6c7920726f6c6c696e672e20506c6561736520776169742e0000000000000000602082015250565b7f546865207265717565737465642061646472657373206d75737420666972737460008201527f2063616c6c20726f6c6c4469636520697473656c66206265666f72652061206860208201527f6f75736520697320636f6d70757465642e000000000000000000000000000000604082015250565b7f596f75206d757374207761697420666f7220796f75722063757272656e74207260008201527f6f6c6c20746f20636f6d706c657465206265666f726520726f6c6c696e67206160208201527f6761696e00000000000000000000000000000000000000000000000000000000604082015250565b6114ba8161118a565b81146114c557600080fd5b50565b6114d1816111d4565b81146114dc57600080fd5b5056fea26469706673582212205b2fbf5d977b157e4b7634a4faf217d5aef2c403581da43d6bc8e66c2221613d64736f6c63430008070033";

type VRFD20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFD20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFD20__factory extends ContractFactory {
  constructor(...args: VRFD20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscriptionId: PromiseOrValue<BigNumberish>,
    vrfCoordinator: PromiseOrValue<string>,
    keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VRFD20> {
    return super.deploy(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    ) as Promise<VRFD20>;
  }
  override getDeployTransaction(
    subscriptionId: PromiseOrValue<BigNumberish>,
    vrfCoordinator: PromiseOrValue<string>,
    keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    );
  }
  override attach(address: string): VRFD20 {
    return super.attach(address) as VRFD20;
  }
  override connect(signer: Signer): VRFD20__factory {
    return super.connect(signer) as VRFD20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFD20Interface {
    return new utils.Interface(_abi) as VRFD20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VRFD20 {
    return new Contract(address, _abi, signerOrProvider) as VRFD20;
  }
}
