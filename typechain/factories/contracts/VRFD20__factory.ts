/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { VRFD20, VRFD20Interface } from "../../contracts/VRFD20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    name: "DiceLanded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "roller",
        type: "address",
      },
    ],
    name: "DiceRolled",
    type: "event",
  },
  {
    inputs: [],
    name: "getKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSubscriptionId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVrfCoordinator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "house",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollDice",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526001600060146101000a81548160ff021916908360ff1602179055506002600060156101000a81548160ff021916908360ff160217905550619c40600360006101000a81548163ffffffff021916908363ffffffff16021790555060038060046101000a81548161ffff021916908361ffff1602179055506001600360066101000a81548163ffffffff021916908363ffffffff160217905550348015620000ab57600080fd5b50604051620017ca380380620017ca8339818101604052810190620000d1919062000209565b818073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336003600a6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600060166101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550806002819055505050506200030a565b600081519050620001d581620002bc565b92915050565b600081519050620001ec81620002d6565b92915050565b6000815190506200020381620002f0565b92915050565b600080600060608486031215620002255762000224620002b7565b5b60006200023586828701620001f2565b93505060206200024886828701620001c4565b92505060406200025b86828701620001db565b9150509250925092565b6000620002728262000283565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600080fd5b620002c78162000265565b8114620002d357600080fd5b50565b620002e18162000279565b8114620002ed57600080fd5b50565b620002fb81620002a3565b81146200030757600080fd5b50565b60805160601c61149a620003306000396000818161015701526101ab015261149a6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630cb4a29d146100675780631fe543e314610085578063331bf125146100a1578063837e7cc6146100bf578063b1cad5e3146100dd578063de3d9fb71461010d575b600080fd5b61006f61012b565b60405161007c9190610ed4565b60405180910390f35b61009f600480360381019061009a9190610d7c565b610155565b005b6100a9610215565b6040516100b69190610f18565b60405180910390f35b6100c761021f565b6040516100d49190611008565b60405180910390f35b6100f760048036038101906100f29190610d22565b6104aa565b6040516101049190610f86565b60405180910390f35b610115610612565b6040516101229190611023565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461020757337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016101fe929190610eef565b60405180910390fd5b610211828261062f565b5050565b6000600254905090565b600080339050600060149054906101000a900460ff1660ff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156102b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b090610fe8565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600254600060169054906101000a900467ffffffffffffffff16600360049054906101000a900461ffff16600360009054906101000a900463ffffffff16600360069054906101000a900463ffffffff166040518663ffffffff1660e01b8152600401610366959493929190610f33565b602060405180830381600087803b15801561038057600080fd5b505af1158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b89190610d4f565b9150806004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060149054906101000a900460ff1660ff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff16827f3e7fdeab84c01ce5308321caa0b460e1c4ec3c7099223d79634d9a71d99932e360405160405180910390a35090565b60606000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561052f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052690610fc8565b60405180910390fd5b600060149054906101000a900460ff1660ff16600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba90610fa8565b60405180910390fd5b61060b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461076d565b9050919050565b60008060169054906101000a900467ffffffffffffffff16905090565b60006004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006001601484600081518110610681576106806112a0565b5b60200260200101516106939190611211565b61069d91906110ab565b905080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060159054906101000a900460ff1660ff16600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080847f54d97c1f7e5abad75bd421455cd4dd296852a52e1ea721f2cdb66d06fa2082a960405160405180910390a350505050565b606060006040518061028001604052806040518060400160405280600981526020017f54617267617279656e000000000000000000000000000000000000000000000081525081526020016040518060400160405280600981526020017f4c616e6e6973746572000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f537461726b00000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600681526020017f547972656c6c000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600981526020017f426172617468656f6e000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f4d617274656c6c0000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f54756c6c7900000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600681526020017f426f6c746f6e000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f477265796a6f790000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f417272796e00000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600481526020017f467265790000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f4d6f726d6f6e740000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600681526020017f5461726c6579000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f4461796e6500000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600581526020017f556d62657200000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f56616c6572796f6e00000000000000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f4d616e6465726c7900000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f436c6567616e650000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600681526020017f476c6f766572000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600881526020017f4b6172737461726b000000000000000000000000000000000000000000000000815250815250905080600184610c279190611101565b60148110610c3857610c376112a0565b5b6020020151915050919050565b6000610c58610c5384611063565b61103e565b90508083825260208201905082856020860282011115610c7b57610c7a611303565b5b60005b85811015610cab5781610c918882610cf8565b845260208401935060208301925050600181019050610c7e565b5050509392505050565b600081359050610cc481611436565b92915050565b600082601f830112610cdf57610cde6112fe565b5b8135610cef848260208601610c45565b91505092915050565b600081359050610d078161144d565b92915050565b600081519050610d1c8161144d565b92915050565b600060208284031215610d3857610d3761130d565b5b6000610d4684828501610cb5565b91505092915050565b600060208284031215610d6557610d6461130d565b5b6000610d7384828501610d0d565b91505092915050565b60008060408385031215610d9357610d9261130d565b5b6000610da185828601610cf8565b925050602083013567ffffffffffffffff811115610dc257610dc1611308565b5b610dce85828601610cca565b9150509250929050565b610de181611135565b82525050565b610df081611147565b82525050565b6000610e018261108f565b610e0b818561109a565b9350610e1b8185602086016111ad565b610e2481611312565b840191505092915050565b6000610e3c60258361109a565b9150610e4782611323565b604082019050919050565b6000610e5f60348361109a565b9150610e6a82611372565b604082019050919050565b6000610e8260448361109a565b9150610e8d826113c1565b606082019050919050565b610ea181611151565b82525050565b610eb08161117f565b82525050565b610ebf81611189565b82525050565b610ece81611199565b82525050565b6000602082019050610ee96000830184610dd8565b92915050565b6000604082019050610f046000830185610dd8565b610f116020830184610dd8565b9392505050565b6000602082019050610f2d6000830184610de7565b92915050565b600060a082019050610f486000830188610de7565b610f556020830187610ec5565b610f626040830186610e98565b610f6f6060830185610eb6565b610f7c6080830184610eb6565b9695505050505050565b60006020820190508181036000830152610fa08184610df6565b905092915050565b60006020820190508181036000830152610fc181610e2f565b9050919050565b60006020820190508181036000830152610fe181610e52565b9050919050565b6000602082019050818103600083015261100181610e75565b9050919050565b600060208201905061101d6000830184610ea7565b92915050565b60006020820190506110386000830184610ec5565b92915050565b6000611048611059565b905061105482826111e0565b919050565b6000604051905090565b600067ffffffffffffffff82111561107e5761107d6112cf565b5b602082029050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006110b68261117f565b91506110c18361117f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110f6576110f5611242565b5b828201905092915050565b600061110c8261117f565b91506111178361117f565b92508282101561112a57611129611242565b5b828203905092915050565b60006111408261115f565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60005b838110156111cb5780820151818401526020810190506111b0565b838111156111da576000848401525b50505050565b6111e982611312565b810181811067ffffffffffffffff82111715611208576112076112cf565b5b80604052505050565b600061121c8261117f565b91506112278361117f565b92508261123757611236611271565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f596f752061726520616c726561647920726f6c6c696e672e20506c656173652060008201527f776169742e000000000000000000000000000000000000000000000000000000602082015250565b7f596f75206d7573742066697273742063616c6c20726f6c6c446963652062656660008201527f6f72652067657474696e67206120686f7573652e000000000000000000000000602082015250565b7f596f75206d757374207761697420666f7220796f75722063757272656e74207260008201527f6f6c6c20746f20636f6d706c657465206265666f726520726f6c6c696e67206160208201527f6761696e00000000000000000000000000000000000000000000000000000000604082015250565b61143f81611135565b811461144a57600080fd5b50565b6114568161117f565b811461146157600080fd5b5056fea264697066735822122068c4e57d5d5cd6e1e34556fd20904305869912f5f3710c8d8f81f8d166c4116d64736f6c63430008070033";

type VRFD20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFD20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFD20__factory extends ContractFactory {
  constructor(...args: VRFD20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscriptionId: PromiseOrValue<BigNumberish>,
    vrfCoordinator: PromiseOrValue<string>,
    keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VRFD20> {
    return super.deploy(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    ) as Promise<VRFD20>;
  }
  override getDeployTransaction(
    subscriptionId: PromiseOrValue<BigNumberish>,
    vrfCoordinator: PromiseOrValue<string>,
    keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    );
  }
  override attach(address: string): VRFD20 {
    return super.attach(address) as VRFD20;
  }
  override connect(signer: Signer): VRFD20__factory {
    return super.connect(signer) as VRFD20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFD20Interface {
    return new utils.Interface(_abi) as VRFD20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VRFD20 {
    return new Contract(address, _abi, signerOrProvider) as VRFD20;
  }
}
